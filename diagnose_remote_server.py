#!/usr/bin/env python3
"""
–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º —Å —É–¥–∞–ª–µ–Ω–Ω—ã–º —Å–µ—Ä–≤–µ—Ä–æ–º FIAS
"""
import requests
import json
import time

def check_remote_server():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞"""
    print("üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ FIAS")
    print("=" * 50)
    
    remote_api = "http://147.45.214.115:8000"
    remote_frontend = "http://147.45.214.115:8080"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ API
    print(f"\n1. –ü—Ä–æ–≤–µ—Ä–∫–∞ API: {remote_api}")
    try:
        response = requests.get(f"{remote_api}/health", timeout=10)
        if response.status_code == 200:
            data = response.json()
            print(f"   ‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç")
            print(f"   üìä Elasticsearch: {data.get('elasticsearch', 'unknown')}")
            print(f"   üìÅ –ò–Ω–¥–µ–∫—Å: {data.get('index', 'unknown')}")
        else:
            print(f"   ‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {response.status_code}")
    except requests.exceptions.ConnectionError:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API")
    except requests.exceptions.Timeout:
        print(f"   ‚è∞ –¢–∞–π–º–∞—É—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
    print(f"\n2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞: {remote_frontend}")
    try:
        response = requests.get(remote_frontend, timeout=10)
        if response.status_code == 200:
            print(f"   ‚úÖ –§—Ä–æ–Ω—Ç–µ–Ω–¥ –¥–æ—Å—Ç—É–ø–µ–Ω")
            print(f"   üìÑ –†–∞–∑–º–µ—Ä –æ—Ç–≤–µ—Ç–∞: {len(response.content)} –±–∞–π—Ç")
        else:
            print(f"   ‚ùå –§—Ä–æ–Ω—Ç–µ–Ω–¥ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {response.status_code}")
    except requests.exceptions.ConnectionError:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥—É")
    except requests.exceptions.Timeout:
        print(f"   ‚è∞ –¢–∞–π–º–∞—É—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥—É")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ—Å—Ç–æ–≤
    print(f"\n3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–µ—Å—Ç–æ–≤")
    try:
        response = requests.get(f"{remote_api}/tests", timeout=10)
        if response.status_code == 200:
            data = response.json()
            tests_count = len(data.get('tests', []))
            print(f"   ‚úÖ –¢–µ—Å—Ç—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã: {tests_count} —Ç–µ—Å—Ç–æ–≤")
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–µ—Å—Ç–æ–≤: {response.status_code}")
    except requests.exceptions.ConnectionError:
        print(f"   ‚ùå –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ç–µ—Å—Ç—ã - API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")

def check_local_services():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–∫–∞–ª—å–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤"""
    print(f"\n\nüè† –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ª–æ–∫–∞–ª—å–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤")
    print("=" * 40)
    
    local_api = "http://localhost:8000"
    local_frontend = "http://localhost:8080"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ API
    print(f"\n1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ API: {local_api}")
    try:
        response = requests.get(f"{local_api}/health", timeout=5)
        if response.status_code == 200:
            data = response.json()
            print(f"   ‚úÖ –õ–æ–∫–∞–ª—å–Ω—ã–π API —Ä–∞–±–æ—Ç–∞–µ—Ç")
            print(f"   üìä Elasticsearch: {data.get('elasticsearch', 'unknown')}")
        else:
            print(f"   ‚ùå –õ–æ–∫–∞–ª—å–Ω—ã–π API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {response.status_code}")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
    print(f"\n2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞: {local_frontend}")
    try:
        response = requests.get(local_frontend, timeout=5)
        if response.status_code == 200:
            print(f"   ‚úÖ –õ–æ–∫–∞–ª—å–Ω—ã–π —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ —Ä–∞–±–æ—Ç–∞–µ—Ç")
            print(f"   üìÑ –†–∞–∑–º–µ—Ä –æ—Ç–≤–µ—Ç–∞: {len(response.content)} –±–∞–π—Ç")
        else:
            print(f"   ‚ùå –õ–æ–∫–∞–ª—å–Ω—ã–π —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {response.status_code}")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")

def compare_services():
    """–°—Ä–∞–≤–Ω–µ–Ω–∏–µ –ª–æ–∫–∞–ª—å–Ω—ã—Ö –∏ —É–¥–∞–ª–µ–Ω–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤"""
    print(f"\n\nüìä –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–æ–≤")
    print("=" * 30)
    
    services = [
        ("API", "http://localhost:8000/health", "http://147.45.214.115:8000/health"),
        ("–§—Ä–æ–Ω—Ç–µ–Ω–¥", "http://localhost:8080/", "http://147.45.214.115:8080/"),
        ("–¢–µ—Å—Ç—ã", "http://localhost:8000/tests", "http://147.45.214.115:8000/tests")
    ]
    
    for name, local_url, remote_url in services:
        print(f"\n{name}:")
        
        # –õ–æ–∫–∞–ª—å–Ω—ã–π
        try:
            local_response = requests.get(local_url, timeout=5)
            local_status = "‚úÖ" if local_response.status_code == 200 else "‚ùå"
            print(f"   –õ–æ–∫–∞–ª—å–Ω—ã–π: {local_status} {local_response.status_code}")
        except:
            print(f"   –õ–æ–∫–∞–ª—å–Ω—ã–π: ‚ùå –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
        
        # –£–¥–∞–ª–µ–Ω–Ω—ã–π
        try:
            remote_response = requests.get(remote_url, timeout=10)
            remote_status = "‚úÖ" if remote_response.status_code == 200 else "‚ùå"
            print(f"   –£–¥–∞–ª–µ–Ω–Ω—ã–π: {remote_status} {remote_response.status_code}")
        except:
            print(f"   –£–¥–∞–ª–µ–Ω–Ω—ã–π: ‚ùå –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")

def provide_solutions():
    """–ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —Ä–µ—à–µ–Ω–∏–π"""
    print(f"\n\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Ä–µ—à–µ–Ω–∏—é –ø—Ä–æ–±–ª–µ–º")
    print("=" * 40)
    
    print(f"\n1. –ü—Ä–æ–±–ª–µ–º–∞: –£–¥–∞–ª–µ–Ω–Ω—ã–π API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
    print(f"   –†–µ—à–µ–Ω–∏–µ: –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ª–æ–∫–∞–ª—å–Ω—É—é –≤–µ—Ä—Å–∏—é")
    print(f"   –ö–æ–º–∞–Ω–¥—ã:")
    print(f"   - API: python -m uvicorn api.main:app --host 0.0.0.0 --port 8000 --reload")
    print(f"   - –§—Ä–æ–Ω—Ç–µ–Ω–¥: python -m http.server 8080 --directory frontend")
    
    print(f"\n2. –ü—Ä–æ–±–ª–µ–º–∞: –¢–µ—Å—Ç—ã –Ω–µ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è")
    print(f"   –†–µ—à–µ–Ω–∏–µ: –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Elasticsearch")
    print(f"   –ü—Ä–æ–≤–µ—Ä–∫–∞: curl http://localhost:8000/health")
    
    print(f"\n3. –ü—Ä–æ–±–ª–µ–º–∞: –ü–æ–∏—Å–∫ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
    print(f"   –†–µ—à–µ–Ω–∏–µ: –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ API –∑–∞–ø—É—â–µ–Ω –∏ –¥–æ—Å—Ç—É–ø–µ–Ω")
    print(f"   –¢–µ—Å—Ç: curl 'http://localhost:8000/search?q=–ú–æ—Å–∫–≤–∞&limit=1'")
    
    print(f"\n4. –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ:")
    print(f"   –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ª–æ–∫–∞–ª—å–Ω—ã–π –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: http://localhost:8080/")
    print(f"   –û–Ω –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Å –ª–æ–∫–∞–ª—å–Ω—ã–º API –Ω–∞ –ø–æ—Ä—Ç—É 8000")

if __name__ == "__main__":
    check_remote_server()
    check_local_services()
    compare_services()
    provide_solutions()
