#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã –ø–æ–∏—Å–∫–∞ FIAS
"""
import requests
import json
import time

def test_search():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∏—Å–∫–∞ –∞–¥—Ä–µ—Å–æ–≤"""
    base_url = "http://localhost:8000"
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã
    test_queries = [
        "–ú–æ—Å–∫–≤–∞, –í–∞—Ä—à–∞–≤—Å–∫–æ–µ —à., 37—Å5",
        "–ú–æ—Å–∫–≤–∞, –ø–ª. –°–∞–≤—ë–ª–æ–≤—Å–∫–æ–≥–æ –í–æ–∫–∑–∞–ª–∞, 2",
        "–ú–æ—Å–∫–≤–∞, –û—Ä–µ—Ö–æ–≤—ã–π –±—É–ª—å–≤–∞—Ä, 39–ö2",
        "–ú–æ—Å–∫–≤–∞, –°–≤–æ–±–æ–¥–Ω—ã–π –ø—Ä–æ—Å–ø–µ–∫—Ç, 37/18",
        "–ú–æ—Å–∫–≤–∞, —É–ª. –ë –î–º–∏—Ç—Ä–æ–≤–∫–∞, 7/5—Å2"
    ]
    
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∏—Å–∫–∞ FIAS")
    print("=" * 50)
    
    for i, query in enumerate(test_queries, 1):
        print(f"\n{i}. –ó–∞–ø—Ä–æ—Å: {query}")
        
        try:
            # –¢–µ—Å—Ç –ø–æ–∏—Å–∫–∞
            response = requests.get(f"{base_url}/search", params={
                "q": query,
                "limit": 3
            })
            
            if response.status_code == 200:
                data = response.json()
                print(f"   ‚úÖ –°—Ç–∞—Ç—É—Å: {response.status_code}")
                print(f"   üìä –ù–∞–π–¥–µ–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: {data.get('total', 0)}")
                
                if data.get('results'):
                    first_result = data['results'][0]
                    print(f"   üè† –ü–µ—Ä–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {first_result.get('full_name', 'N/A')}")
                    print(f"   üìç –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: {first_result.get('geo_point', 'N/A')}")
                else:
                    print("   ‚ùå –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            else:
                print(f"   ‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
                print(f"   üìÑ –û—Ç–≤–µ—Ç: {response.text}")
                
        except Exception as e:
            print(f"   ‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
        
        time.sleep(0.5)  # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏

def test_health():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è API"""
    print("\nüè• –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è API")
    print("=" * 30)
    
    try:
        response = requests.get("http://localhost:8000/health")
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç")
            print(f"üìä Elasticsearch: {data.get('elasticsearch', 'unknown')}")
            print(f"üìÅ –ò–Ω–¥–µ–∫—Å: {data.get('index', 'unknown')}")
        else:
            print(f"‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")

def test_analyze():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–Ω–∞–ª–∏–∑–∞ –∑–∞–ø—Ä–æ—Å–∞"""
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–Ω–∞–ª–∏–∑–∞ –∑–∞–ø—Ä–æ—Å–∞")
    print("=" * 40)
    
    test_query = "–ú–æ—Å–∫–≤–∞, –í–∞—Ä—à–∞–≤—Å–∫–æ–µ —à., 37—Å5"
    
    try:
        response = requests.get(f"http://localhost:8000/analyze", params={
            "q": test_query
        })
        
        if response.status_code == 200:
            data = response.json()
            print(f"üìù –ó–∞–ø—Ä–æ—Å: {test_query}")
            print(f"üîß –ù–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π: {data.get('normalized_query', 'N/A')}")
            print(f"üè† –î–æ–º: {data.get('house_number', 'N/A')}")
            print(f"üè¢ –ö–æ—Ä–ø—É—Å: {data.get('korpus', 'N/A')}")
            print(f"üèóÔ∏è –°—Ç—Ä–æ–µ–Ω–∏–µ: {data.get('stroenie', 'N/A')}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")

if __name__ == "__main__":
    test_health()
    test_analyze()
    test_search()
